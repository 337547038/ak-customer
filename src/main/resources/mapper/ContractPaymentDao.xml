<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="customer.dao.ContractPaymentDao">

    <resultMap type="customer.entity.ContractPayment" id="ContractPaymentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="contractId" column="contractId" jdbcType="INTEGER"/>
        <result property="money" column="money" jdbcType="VARCHAR"/>
        <result property="datetime" column="datetime" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="creatDate" column="creatDate" jdbcType="TIMESTAMP"/>
        <result property="account" column="account" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="commColumnsItem">
        id, code, contractId, money, datetime, remark, creatDate, account, status
    </sql>
    <!--查询单个-->
    <select id="queryById" resultMap="ContractPaymentMap">
        select
        <include refid="commColumnsItem"/>
        from sys_contract_payment
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit">
        select
        p.id, p.code, p.contractId, p.money, p.datetime, p.creatDate, p.account, p.status,
        c.name as contractName,c.code as contractCode,cu.company as customerName
        from sys_contract_payment as p
        join sys_contract c on c.id=p.contractId
        left join sys_customer cu on cu.id=c.customerId

        <where>
            <if test="extend.userId != null">
                and c.userId = #{extend.userId}
            </if>
            <if test="query.id != null">
                and p.id = #{query.id}
            </if>
            <if test="query.code != null and query.code != ''">
                and p.code = #{query.code}
            </if>
            <if test="query.contractId != null">
                and p.contractId = #{query.contractId}
            </if>
            <if test="query.money != null and query.money != ''">
                and p.money = #{query.money}
            </if>
            <if test="query.datetime != null">
                and p.datetime = #{query.datetime}
            </if>
            <if test="query.remark != null and query.remark != ''">
                and p.remark = #{query.remark}
            </if>
            <if test="query.creatDate != null">
                and p.creatDate = #{query.creatDate}
            </if>
            <if test="query.account != null">
                and p.account = #{query.account}
            </if>
            <if test="query.status != null">
                and p.status = #{query.status}
            </if>
        </where>
        <choose>
            <when test="extend.sort != null and extend.sort!=''">
                order by ${extend.sort}
            </when>
            <otherwise>
                order by p.id desc
            </otherwise>
        </choose>
        <if test="extend.pageSize >0">
            limit #{extend.pageIndex}, #{extend.pageSize}
        </if>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_contract_payment p
        join sys_contract c on c.id=p.contractId
        <where>
            <if test="extend.userId != null">
                and c.userId = #{extend.userId}
            </if>
            <if test="query.id != null">
                and p.id = #{query.id}
            </if>
            <if test="query.code != null and query.code != ''">
                and p.code = #{query.code}
            </if>
            <if test="query.contractId != null">
                and p.contractId = #{query.contractId}
            </if>
            <if test="query.money != null and query.money != ''">
                and p.money = #{query.money}
            </if>
            <if test="query.datetime != null">
                and p.datetime = #{query.datetime}
            </if>
            <if test="query.remark != null and query.remark != ''">
                and p.remark = #{query.remark}
            </if>
            <if test="query.creatDate != null">
                and p.creatDate = #{query.creatDate}
            </if>
            <if test="query.account != null">
                and p.account = #{query.account}
            </if>
            <if test="query.status != null">
                and p.status = #{query.status}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sys_contract_payment(code, contractId, money, datetime, remark, creatDate, account, status)
        values (#{code}, #{contractId}, #{money}, #{datetime}, #{remark}, #{creatDate}, #{account}, #{status})
    </insert>

    <!--通过主键修改数据-->
    <update id="updateById">
        update sys_contract_payment
        <set>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="contractId != null">
                contractId = #{contractId},
            </if>
            <if test="money != null and money != ''">
                money = #{money},
            </if>
            <if test="datetime != null">
                datetime = #{datetime},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="creatDate != null">
                creatDate = #{creatDate},
            </if>
            <if test="account != null">
                account = #{account},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete p
        from sys_contract_payment p
        join sys_contract as c on c.id=p.contractId
        where (c.userId=#{extend.userId} or c.userId in
        <foreach collection="extend.userIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        ) and p.id in
        <foreach collection="id" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

</mapper>
